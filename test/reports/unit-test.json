{
  "stats": {
    "suites": 3,
    "tests": 12,
    "passes": 1,
    "pending": 11,
    "failures": 0,
    "start": "2019-05-09T15:18:50.277Z",
    "end": "2019-05-09T15:18:50.521Z",
    "duration": 244,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 91.7,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "success"
  },
  "suites": {
    "uuid": "8e959bb2-9e2d-49bc-9138-8235c7865baa",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "38695ca8-2594-4ab2-a125-77ffbf2673c7",
        "title": "Testing Calculator",
        "fullFile": "C:\\myData\\microservices\\RnD\\mocha-project\\test\\test.js",
        "file": "\\test\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should calculate the sum of two numbers",
            "fullTitle": "Testing Calculator should calculate the sum of two numbers",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "18b81a9c-6a46-4cc4-8a60-55ef3fecc3f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should calculate the difference of two numbers",
            "fullTitle": "Testing Calculator should calculate the difference of two numbers",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "979b413d-21e3-4173-83e2-75e4d0855867",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should calculate the product of two numbers",
            "fullTitle": "Testing Calculator should calculate the product of two numbers",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "d6e407fe-67bb-48cb-b790-33959d69d350",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should calculate the dividend of two numbers",
            "fullTitle": "Testing Calculator should calculate the dividend of two numbers",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "fcf67545-bf9a-4fa0-8549-992e60b61807",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [
          "18b81a9c-6a46-4cc4-8a60-55ef3fecc3f0",
          "979b413d-21e3-4173-83e2-75e4d0855867",
          "d6e407fe-67bb-48cb-b790-33959d69d350",
          "fcf67545-bf9a-4fa0-8549-992e60b61807"
        ],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "39d54f54-10d9-4214-a781-6d8504e7724a",
        "title": "Testing Calculator-Exceptions",
        "fullFile": "C:\\myData\\microservices\\RnD\\mocha-project\\test\\test.js",
        "file": "\\test\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return error for blank operation",
            "fullTitle": "Testing Calculator-Exceptions should return error for blank operation",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "633e32b6-e99c-4571-81a4-414f55a05c86",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error for invalid operation",
            "fullTitle": "Testing Calculator-Exceptions should return error for invalid operation",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "acbe1d6c-b0fa-4c3a-8fb9-e961fa281ff3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error for incorrect operands",
            "fullTitle": "Testing Calculator-Exceptions should return error for incorrect operands",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "4baaf139-9a94-448b-92ae-dd50f856866d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [
          "633e32b6-e99c-4571-81a4-414f55a05c86",
          "acbe1d6c-b0fa-4c3a-8fb9-e961fa281ff3",
          "4baaf139-9a94-448b-92ae-dd50f856866d"
        ],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "aa9b9200-13c2-4456-bba4-eb71cb548465",
        "title": "Testing async api",
        "fullFile": "C:\\myData\\microservices\\RnD\\mocha-project\\test\\test.js",
        "file": "\\test\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Using setTimeout to simulate asynchronous code!",
            "fullTitle": "Testing async api Using setTimeout to simulate asynchronous code!",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "9ae21923-e618-48a9-a7b2-63e0d15ce8fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Using setTimeout to simulate asynchronous code!",
            "fullTitle": "Testing async api Using setTimeout to simulate asynchronous code!",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "22180d5f-50f8-40e7-a7aa-7651d24fdf58",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Using a Promise that resolves successfully!",
            "fullTitle": "Testing async api Using a Promise that resolves successfully!",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "631d5ff3-ed73-4770-80a5-a0434ed948ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Using a Promise that resolves successfully!",
            "fullTitle": "Testing async api Using a Promise that resolves successfully!",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "fdb20a22-45cd-4d8e-869e-5a24b4c7fa24",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Using a Promise that resolves successfully with correct expectation!",
            "fullTitle": "Testing async api Using a Promise that resolves successfully with correct expectation!",
            "timedOut": false,
            "duration": 205,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var testPromise = new Promise(function(resolve) {\n    setTimeout(function() {\n        resolve(\"Hello World!\");\n    }, 200);\n});\n    \nreturn testPromise.then(function(result){\n    expect(result).to.equal(\"Hello World!\");\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f2a0f434-f1d0-4528-8686-8a49d382412b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f2a0f434-f1d0-4528-8686-8a49d382412b"
        ],
        "failures": [],
        "pending": [
          "9ae21923-e618-48a9-a7b2-63e0d15ce8fe",
          "22180d5f-50f8-40e7-a7aa-7651d24fdf58",
          "631d5ff3-ed73-4770-80a5-a0434ed948ad",
          "fdb20a22-45cd-4d8e-869e-5a24b4c7fa24"
        ],
        "skipped": [],
        "duration": 205,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}